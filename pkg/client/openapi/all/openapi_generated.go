// +build !ignore_autogenerated

// Code generated by jx create client. DO NOT EDIT.
package openapi

import (
	openapicore "github.com/jenkins-x/jx-api/pkg/client/openapi/core"

	openapi0 "github.com/jenkins-x/jx-api/pkg/client/openapi/k8s_io_apimachinery_meta_v1"

	openapi1 "github.com/jenkins-x/jx-api/pkg/client/openapi/k8s_io_apimachinery_resource_unversioned"

	openapi2 "github.com/jenkins-x/jx-api/pkg/client/openapi/k8s_io_apimachinery_intstr_unversioned"

	openapi3 "github.com/jenkins-x/jx-api/pkg/client/openapi/k8s_io_api_batch_v1"

	openapi4 "github.com/jenkins-x/jx-api/pkg/client/openapi/k8s_io_api_core_v1"

	openapi5 "github.com/jenkins-x/jx-api/pkg/client/openapi/k8s_io_api_rbac_v1"

	"k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	result := make(map[string]common.OpenAPIDefinition)
	// This is our core openapi definitions (the ones for this module)
	for k, v := range openapicore.GetOpenAPIDefinitions(ref) {
		result[k] = v
	}
	// These are the ones we depend on

	for k, v := range openapi0.GetOpenAPIDefinitions(ref) {
		result[k] = v
	}

	for k, v := range openapi1.GetOpenAPIDefinitions(ref) {
		result[k] = v
	}

	for k, v := range openapi2.GetOpenAPIDefinitions(ref) {
		result[k] = v
	}

	for k, v := range openapi3.GetOpenAPIDefinitions(ref) {
		result[k] = v
	}

	for k, v := range openapi4.GetOpenAPIDefinitions(ref) {
		result[k] = v
	}

	for k, v := range openapi5.GetOpenAPIDefinitions(ref) {
		result[k] = v
	}

	return result
}

func GetNames(ref common.ReferenceCallback) []string {
	result := make([]string, 0)
	for k, _ := range openapicore.GetOpenAPIDefinitions(ref) {
		result = append(result, k)
	}
	return result
}
